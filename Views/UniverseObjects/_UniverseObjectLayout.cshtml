
@{
    ViewBag.Title = "UNIVERSE OBJECT MODELING";
    Layout = null;
}
<head>
    <link href="~/Content/vailware.stylesheet.master.css" rel="stylesheet" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UNIVERSE OBJECTS</title>6

    @*@Styles.Render("~/Content/css")
        @Scripts.Render("~/bundles/modernizr")*@

    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js">
        </script>*@


    <script src="/threejs/three.js.oldbuild/three.min.js"></script>
    <script src="~/threejs/three.js.oldbuild/OrbitControls.js"></script>
    <script src="~/threejs/three.js.oldbuild/GLTFLoader.js"></script>
    <script src="~/threejs/three.js.oldbuild/TTFLoader.js"></script>
    <script src="~/threejs/three.js.oldbuild/tween.js"></script>

    <link href="~/DataTables/datatables.min.css" rel="stylesheet" />
    <link href="~/DataTables/Responsive-2.5.0/css/responsive.dataTables.min.css" rel="stylesheet" />
    <script src="~/DataTables/datatables.min.js"></script>
    <script src="~/DataTables/Responsive-2.5.0/js/dataTables.responsive.min.js"></script>

    <link href="~/Content/vailware.stylesheet.master.css" rel="stylesheet" />
    <script src="~/Scripts/vailware.universeModeling.library.js"></script>
    <script src="~/Scripts/vailware.filemanagement.functions.library.js"></script>
</head>
@*^^^no thanks, maybe later*@


<style>
    #webGL {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
    }

    #webGLFullScreenRenderer {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;
    }

    .mainNavBarLinks {
        color: #ffffff;
        font-size: clamp(12px, 1.1vmin, 24px);
    }

        .mainNavBarLinks a {
            color: #ffffff;
            font-size: clamp(12px, 1.1vmin, 24px);
        }

            .mainNavBarLinks a:hover {
                color: #00ff00;
            }


    #generalObjectTabMenu {
        position: absolute;
        top: 2vh;
        left: 0px;
        width: 100%;
        margin: 5px 5px 5px 5px;
        box-shadow: rgba(255, 255, 255, .7) 20px 20px inset;
        display: grid;
        text-align: center;
        background-color: rgba(16, 16, 16, .7);
        display: flex;
        flex-wrap: wrap;
    }

    .tabMenuItem {
        font-size: clamp(12px, .9vmax, 18px);
        color: #dddddd;
    }

        .tabMenuItem a {
            font-size: clamp(12px, .9vmax, 24px);
            color: #dddddd;
        }

            .tabMenuItem a:hover {
                color: #ffffff;
                background-color: rgba(0, 255, 255, .9);
            }

    .menuPageContainer {
        position: absolute;
        top: 9vh;
        left: 0px;
        width: 100%;
        height: 85vh;
        visibility: hidden;
        opacity: 0;
        font-size: clamp(12px, 1vmax, 18px);
        color: #00ffff;
        text-align: left;
        overflow: hidden;
    }

    .tabMenuTitle {
        font-size: clamp(12px, 1.1vmin, 24px);
        color: #ffffff;
        text-align: left;
        text-shadow: .1vmin .1vmin #000000;
    }

    .tabPageTitle {
        font-size: clamp(12px, 1vmax, 22px);
        color: #ffffff;
        text-align: left;
        text-shadow: 1px 1px #000000;
    }

    .generalObjectLabel {
        font-size: clamp(14px, 1.1vmin, 22px);
        text-shadow: 1px 1px #000000;
        color: #ffffff;
    }
</style>

<style>
    body {
        background-color: #000000;
        overflow: hidden;
        font-family: audiowide;
    }

    a {
        font-family: audiowide;
        font-size: clamp(10px, .9vmax, 16px);
        color: #ff5e00;
    }

        a:hover {
            color: #00ff00;
        }

    .asyncRenderContainer {
        position: absolute;
        overflow: hidden;
        top: 0px;
        left: 0px;
        width: 100%;
        height: 100%;
        background: transparent;
    }
</style>

<body>

    <div id="fullScreenNavigation">
    </div>

    <div id="webGLFullScreenRenderer">

    </div>

    <div id="contactContainer"
         style="position: absolute;
                bottom: 0px;
                left: 0px;
                overflow: hidden;
                width: 20vw;
                height: 20vh;">
    </div>
        @*@{Html.RenderAction("Contact", "Home");}*@

    <div id="topNavigationContainer"
         style="position: absolute;
                width: 100%;
                height: 10vh;
                min-height: 10vh;
                z-index: 9999;
                top: 0px;
                left: 0px;
                display: flex;
                flex-direction: row;
                flex-wrap: wrap;">

        <div id="hamburgerNavigation"
             style="position: absolute;
                    left: 0px;
                    top: 0px;">

            <a href="#" class="themedUIHighlight"
               style="font-size: clamp(32px, 3.5vmax, 52px);
                               text-decoration: none;
                               color: #ff5e00;
                               font-weight: 700;">☰</a>
        </div>

        <div id="colorsContainer"
             style="position: absolute;
                    left: 100px;
                    top: 0px;
                    display: flex;
                    flex-direction: row;
                    flex-wrap: wrap;">
            <div>
                <input type="color" id="themeColor" />
            </div>
            <div>
                <input type="color" id="themeBackgroundColor" />
            </div>
            <div>
                <input type="color" id="themeHighlightColor" />
            </div>
            <div>
                <input type="color" id="themeObjectBackgroundColor" />
            </div>
        </div>

        <div style="position: absolute;
                    top: 0px;
                    right: 0px;
                    display: flex;
                    flex-direction: column ;
                    text-align: right;
                    margin: 2px 2px 2px 2px;">
            <div>
                <a href="#" id="siteBrand"
                   class="themedUIHighlight glowingGreen"
                   style="font-size: clamp(22px, 1.7vmax, 42px);
                          color: #ff5e00;
                          font-weight: 600;
                          text-shadow: 1px 1px rgba(16, 16, 16, .9);">
                    UNIVERSE OBJECT MODELING
                </a>
            </div>
        </div>
    </div>

    <div id="generalObjectContent"
         class="themedUIBackground themedUIHighlight"
         style="width: 100%;
                position: absolute;
                top: 10vh;
                left: 0px;
                color: #00ffff;">

        <div id="generalObjectTabMenu"
             style="width: 100%;
                    display: flex;
                    flex-direction: row;
                    flex-wrap: wrap;
                    z-index: 9999;"
             class="themedUI themedUIBackground">

            <div>
                <button id="menuCollapser"
                        class="tabMenuItem
                               blackBevel
                               themedUI
                               themedUIBackground
                               buttons"
                        style="width: 50px;">
                <-
                </button>
            </div>

            <div>
                <button class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons"
                        onclick="showMenuPageContainer({ containerID: 'menuPageHomeIndex' })">
                    HOME
                </button>
            </div>

            <div>
                <select id="renderObjectSelector"
                        class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons">
                    <option value="sun">
                        SUN
                    </option>
                    <option value="earth">
                        EARTH
                    </option>
                    <option value="moon">
                        MOON
                    </option>
                    <option value="mars">
                        MARS
                    </option>
                    <option value="mars">
                        SPACE STATION
                    </option>
                </select>
            </div>

            <div>
                <button class="collapseable 
                               tabMenuItem 
                               blackBevel 
                               themedUI 
                               themedUIBackground 
                               buttons"
                        onclick="showMenuPageContainer({
                                containerID: 'menuPageUniverseObjectsIndex'
                                })">
                    INDEX
                </button>
            </div>

            <div>
                <button class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons"
                        onclick="showMenuPageContainer({ containerID: 'menuPageUniverseObjectsCreate' })">
                    CREATE
                </button>
            </div>

            <div>
                <button class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons"
                        onclick="showMenuPageContainer({ containerID: 'menuPageCelestialSpheres' })">
                    β SPHERES
                </button>
            </div>

            <div>
                <button class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons"
                        onclick="showMenuPageContainer({ containerID: 'menuPageUniverseObjectRenderer' })">
                    RENDER
                </button>
            </div>
            <div>
                <button class="collapseable tabMenuItem blackBevel themedUI themedUIBackground buttons"
                        onclick="showMenuPageContainer({ containerID: 'menuPageContact' })">
                    CONTACT
                </button>
            </div>
        </div>

        <div id="menuPageHomeIndex"
             class="menuPageContainer">
            <div style="position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    UNIVERSE OBJECT MODELING HOME PAGE.
                </label>
            </div>
            <div id="renderBodyAsyncContainer"
                 class="asyncRenderContainer">
                @RenderBody()
            </div>
        </div>

        <div id="menuPageDataExplorer"
             class="menuPageContainer">
            <div style="position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    DATA EXPLORER.
                </label>
            </div>
            <div id="dataExplorerAsyncContainer"
                 class="asyncRenderContainer">
            </div>
        </div>

        <div id="menuPageUniverseObjectsIndex"
             class="menuPageContainer">
            <div style="
                   position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    UNIVERSE OBJECTS.
                </label>
            </div>
            <div id="universeObjectsIndexAsyncContainer"
                 class="asyncRenderContainer">
            </div>

        </div>

        <div id="menuPageUniverseObjectsCreate"
             class="menuPageContainer">
            <div style="
                   position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    CREATE UNIVERSE OBJECT
                </label>
            </div>
            <div id="universeObjectsCreateAsyncContainer"
                 class="asyncRenderContainer">
            </div>
        </div>

        <div id="menuPageCelestialSpheres"
             class="menuPageContainer">
            <div style="position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    SPHEROIDS
                </label>
            </div>
            <div id="celestialSpheresIndexAsyncContainer"
                 class="asyncRenderContainer">
            </div>
        </div>

        <div id="menuPageUniverseObjectRenderer"
             class="menuPageContainer">
            <div style="position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    UNIVERSE OBJECT RENDERER
                </label>
            </div>
            <div id="universeObjectsRendererAsyncContainer"
                 class="asyncRenderContainer">
                <div id="asyncWebGL" 
                     style="position: absolute;
                            top: 0px;
                            left: 0px;
                            width: 100%; 
                            height: 100%;">
                </div>
            </div>
        </div>

        <div id="menuPageContact"
             class="menuPageContainer">
            <div style="position: absolute;
                   width: 100%;
                   left: 0px;
                   top: 0px;">
                <label class="tabPageTitle themedUIHighlight">
                    CONTACT
                </label>
            </div>

            <div id="contactAsyncContainer"
                 class="asyncRenderContainer">
            </div>
        </div>
    </div>


</body>

<script>


    document.getElementById("themeColor")
        .addEventListener("input", function () {
            document.querySelectorAll('.themedUI').forEach(element => {
                element.style.color = this.value;
            })

            //var themeColor = document.getElementById("themeColor");
            //var localColor = themeColor.value;
            //var color = new THREE.Color(this.value);
            //var rgbColor = color.getRGB;
            //var rgbaColor = new THREE.Color(rgbColor);
            //var rgba = "rgba(" + rgbaColor.r + "," + rgbaColor.g + ", " + rgbaColor.b + ", .3)";

        });


    document.getElementById("themeBackgroundColor")
        .addEventListener("input", function () {
            document.querySelectorAll('.themedUIBackground').forEach(element => {
                element.style.background = this.value;
            });
        });

    document.getElementById("themeHighlightColor")
        .addEventListener("input", function () {
            document.querySelectorAll('.themedUIHighlight').forEach(element => {
                element.style.color = this.value;
            });
            document.querySelectorAll('.shadow').forEach(element => {
                element.style.textShadow = "1px 1px " + this.value;
            });

        });

    document.getElementById("hamburgerNavigation")
        .addEventListener("click", function () {

            var dbMenuBar =
                document.getElementById('dbMenuBar');

            var menuCollapser =
                document.getElementById('menuCollapser');

            if (menuCollapser.innerText == "<-") {
                document.querySelectorAll('.collapseable').forEach(element => {
                    element.style.transition = "3s";
                    element.style.opacity = "0";
                    element.style.visibility = "hidden";
                    element.style.transform = "rotateY(-180deg)";
                })

                menuCollapser.innerText = "->";
                return 'collapsed';
            }

            if (menuCollapser.innerText == "->") {
                document.querySelectorAll('.collapseable').forEach(element => {
                    element.style.transition = "1s";
                    element.style.opacity = "1";
                    element.style.visibility = "visible";
                    element.style.transform = "rotateY(0deg)";
                })
                menuCollapser.innerText = "<-";
                return 'expanded';
            }
        })

    function hideAsyncRenderContainers() {
        var asyncRenderContainers =
            document.querySelectorAll('.asyncRenderContainer');
        asyncRenderContainers.forEach(element => {
            element.style.transition = '2s';
            element.style.opacity = "0";
            element.style.visibility = 'hidden';
        });
    };

    function collapseMenus() {
        var collapseables =
            document.querySelectorAll('.collapseable');
        collapseables.forEach(element => {
            element.style.transition = '2s';
            element.style.opacity = "0";
            element.style.visibility = 'hidden';
        });
    }

    function expandMenus() {
        var collapseables =
            document.querySelectorAll('.collapseable');
        collapseables.forEach(element => {
            element.style.transition = '.5s';
            element.style.opacity = "1";
            element.style.visibility = 'visible';
        });
    }

    //document.getElementById("menuCollapser")
    //    .addEventListener("click", function () {
    //        var menuCollapser =
    //            document.getElementById("menuCollapser");

    //        switch (menuCollapser.innerText) {
    //            case '<-':
    //                collapseMenus();
    //                menuCollapser.innerText = "->";
    //                break;

    //            case '->':
    //                expandMenus();
    //                menuCollapser.innerText = "<-";
    //                break;
    //        }
    //    });

    function toggleFullscreenNavigation() {
        var fullScreenNavigation =
            document.getElementById('fullScreenNavigation');
        if (fullScreenNavigation.style.visibility == 'hidden') {
            fullScreenNavigation.style.visibility = 'visible';
            return 'visible';
        }
        if (fullScreenNavigation.style.visibility == 'visible') {
            fullScreenNavigation.style.visibility = 'hidden';
            return 'hidden';
        }
    }

    function hideMenuPageContainers() {
        var menuPageContainers =
            document.querySelectorAll('.menuPageContainer');
        menuPageContainers.forEach(element => {
            element.style.transition = '2s';
            element.style.visibility = 'hidden';
            element.style.transform = 'rotateY(180deg)';
            element.style.opacity = '0';
        });

        var dbMenuBars =
            document.querySelectorAll('.dbMenuBar');
        dbMenuBars.forEach(element => {
            element.style.transition = '2s';
            element.style.visibility = 'hidden';
            element.style.transform = 'rotateY(180deg)';
            element.style.opacity = '0';
        });

    }

    function showMenuPageContainer({
        containerID
    }) {
        hideMenuPageContainers();

        var menuPageContainer =
            document.getElementById(containerID);

        menuPageContainer.style.transition = ".5s";
        menuPageContainer.style.visibility = "visible";
        menuPageContainer.style.transform = "rotateY(0deg)";
        menuPageContainer.style.opacity = "1";
    }



    function createStarMap() {
        initializeScene();
        scene = window.scene;

        scene.background = loadEnvironment("/images/universe/starmap_8k.png");

        ambientLight = new THREE.AmbientLight();
        ambientLight.intensity = 1;
        scene.add(ambientLight);
        ambientLight.name = "defaultAmbientLight";
        window.ambientLight = ambientLight;

        window.renderDIV = "asyncWebGL";
        setupRenderer("asyncWebGL");
        setupCamera();
        setupControls();

        var imaginaryOrbitVector = new THREE.Vector3(1, 1, 1);
        var imaginaryObject = new THREE.Object3D();

        imaginaryObject.position.x = imaginaryOrbitVector.x;
        imaginaryObject.position.y = imaginaryOrbitVector.y;
        imaginaryObject.position.z = imaginaryOrbitVector.z;

        scene.add(imaginaryObject);

        var cameraOrbitTime = .01;
        var orbitalVelocity = .001;
        var orbitDistance = 100;

        function animate(time) {
            requestAnimationFrame(animate);
            TWEEN.update(time);

            camera.position.x =
                imaginaryObject.position.x +
                (orbitDistance * Math.sin(cameraOrbitTime) + 0);

            camera.position.z =
                imaginaryObject.position.z +
                (orbitDistance * Math.cos(cameraOrbitTime) + 0);

            cameraOrbitTime += orbitalVelocity;

            controls.update();
            renderer.render(scene, camera);
        }

        function render() {
            animate(performance.now());
        }

        document.body.onresize = function () {
            var width = window.innerWidth;
            var height = window.innerHeight;
            window.renderer.setSize(width, height);
            window.camera.aspect = width / height;
            window.camera.updateProjectionMatrix();
        }
        document.body.onresize();
        render();
    }

    var renderObjectSelector =
        document.getElementById('renderObjectSelector');

    renderObjectSelector.addEventListener('change', function (event) {
        var objectName = renderObjectSelector.value;

        hideAsyncRenderContainers();
        hideMenuPageContainers();

        webGLFullScreenRenderer = document.getElementById('webGLFullScreenRenderer');
        webGLFullScreenRenderer.classList.add("collapseable");
        webGLFullScreenRenderer.style.visibility = "visible";
        webGLFullScreenRenderer.style.opacity = "1";
        webGLFullScreenRenderer.style.width = "100%";
        webGLFullScreenRenderer.style.height = "100%";

        switch (objectName) {
            case 'sun':
                fetch('/Home/UniverseObjectCreateObject')
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById("webGL").innerHTML = html;
                //        renderVideoSphere();
                })
                break;

            case 'earth':
                fetchPage({
                    containerElementId: 'webGL',
                    pageUrl: '/CelestialSpheres/celestialspheredetails?id=1'
                });
                break

            case 'moon':
                fetchPage({
                    containerElementId: 'webGL',
                    pageUrl: '/CelestialSpheres/celestialspheredetails?id=2'
                });
                break

            case 'mars':
                fetchPage({
                    containerElementId: 'webGL',
                    pageUrl: '/CelestialSpheres/celestialspheredetails?id=3'
                });
                break
        }
    })


    window.addEventListener("load", event => {
        fetchPage({
            containerElementId: 'webGL',
            pageUrl: '/Home/SunTest'
        });

        fetchPage({
            containerElementId: "universeObjectsIndexAsyncContainer",
            pageUrl: "/UniverseObjects/Index"
        });

        fetchPage({
            containerElementId: "universeObjectsCreateAsyncContainer",
            pageUrl: "/UniverseObjects/Create"
        });

        fetchPage({
            containerElementId: "webGLFullScreenRenderer",
            pageUrl: '/CelestialSpheres/CelestialSphereDetails?id=1'
        });


    });

    hideMenuPageContainers();
</script>
